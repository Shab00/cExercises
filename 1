"ex26.c" 15L, 312B
Error: jupyter-vim failed to initialize Python:
  [jupyter-vim] s:init_python: s:init_outcome = could not import jupyter_vim <- ImportError: Could not import jupyter.
  (The original ImportError: No module named 'jupyter')

  Jupyter-Vim interface, permit to send code to a jupyter kernel from a vim client

  Install:
      You *must* install the jupyter package into the
      Python that your vim is linked against. If you are seeing this message, this
      usually means either:
          (1) configuring vim to automatically load a virtualenv that has Jupyter
              installed and whose Python interpreter is the same version that your
              vim is compiled against
          (2) installing Jupyter using the system Python that vim is using, or
          (3) recompiling Vim against the Python where you already have Jupyter
              installed.
      This is only a requirement to allow Vim to speak with a Jupyter kernel using
      Jupyter's own machinery. It does *not* mean that the Jupyter instance with
      which you communicate via jupyter-vim needs to be running the same version of
      Python.
(in BufRead Autocommands for "*"..script /Users/bashaardhoot/.vim/plugged/jupyter-vim/autoload/jupyter.vim[73]..function jupyter#i
nit_python[5]..<SNR>52_init_python, line 31)
Error detected while processing BufRead Autocommands for "*"..function jupyter#Connect:
line    2:
Traceback (most recent call last):
  File "<string>", line 1, in <module>
NameError: name '_jupyter_session' is not defined
Press ENTER or type command to continue#include <stdio.h>

int main(int argc, char **argv) {
    if (argc < 2) {
        fprintf(stderr, "Usage: %s <word1> [<word2> ...]\n", argv[0]);
        return 1;
    }

    printf("You enterd the following words:\n");
    for (int i = 1; i < argc; i++) {
        printf("%s\n", argv[i]);
    }

    return 0;
}
