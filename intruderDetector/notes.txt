# Intruder Detector Project Roadmap (SDL2 + C)

## Step 1: Initialize the Webcam

**Goal:**  
Open the webcam for capturing images.

**How-to:**  
- Use SDL2 and SDL2's [camera API](https://wiki.libsdl.org/SDL_CreateCamera) (note: camera support is experimental; you may need [SDL2-camera](https://github.com/icculus/SDL2-camera) or platform-specific APIs).
- Create an SDL_Window for display.
- Check for errors (e.g., if no webcam is found).

**Questions:**  
- Do you know how to print error messages in C?  
- Do you know how to quit your program if something fails?

---

## Step 2: Grab a Frame from the Webcam

**Goal:**  
Capture a single image frame from the webcam.

**How-to:**  
- Use camera API (`SDL_CameraGetFrame()` or similar) to get the latest frame.
- Check if the frame was retrieved successfully.

---

## Step 3: Display the Frame (Optional, but useful for debugging)

**Goal:**  
Show the webcam image in a window so you can see what the camera sees.

**How-to:**  
- Create an SDL_Texture from the pixel data.
- Use `SDL_RenderCopy()` and `SDL_RenderPresent()` to display the frame.

---

## Step 4: Save the Frame as an Image File

**Goal:**  
Write the captured image to a file (e.g., `snapshot.bmp`).

**How-to:**  
- Use SDL's image saving routines such as `SDL_SaveBMP()` (for BMP format only).
- For PNG/JPG, use [stb_image_write.h](https://github.com/nothings/stb) or [SDL2_image](https://www.libsdl.org/projects/SDL_image/).

---

## Step 5: Loop to Continuously Capture Frames

**Goal:**  
Continuously capture new frames, display, and potentially save them.

**How-to:**  
- Use a `while` loop to poll frames from the webcam.
- Poll SDL events in the loop to allow user interaction (e.g., quit with 'q' or window close).

---

## Step 6: Motion Detection (Bonus/Challenge)

**Goal:**  
Only save frames when there is movement (an "intruder").

**How-to:**  
- Store the previous frame's pixel data in memory.
- Compare the current frame to the previous frame to detect changes (e.g., pixel difference threshold).
- If the change is significant, save the current frame as an image.

---

## Step 7: Clean Up

**Goal:**  
Release webcam and destroy windows before exiting, so your program is tidy.

**How-to:**  
- Free camera resources (close camera).
- Destroy textures, renderer, and window.
- Call `SDL_Quit()` before exiting.

---

**Tip:**  
SDL2 is great for graphics and image handling. Webcam support may require extra setup or libraries (SDL2-camera, Video4Linux2 on Linux, AVFoundation on macOS). If you need a starter code for capturing and displaying webcam frames, just ask!
